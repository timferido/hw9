/****************************************************************************

                                                        Adam Kabbara, cs12xbr
														Tim Ferido, cs12xaf
                                                        CSE 12, SS2 
                                                        09-06-2017
                                Assignment Nine

File Name:      Driver.h
Description:    This file contains fuctions for a UCSDStudent. It is used to 
				store and display information about the student.
****************************************************************************/

#ifndef DRIVER_H
#define DRIVER_H

#include <string.h>
#include <iostream>
#include <fstream>
#include <cstdlib>
using namespace std;

/***************************************************************************
class UCSDStudent

Description: 	Implements a UCSD student to be insert into the tree. Each
		UCSD student contains to data members, name of stutent, and 
		student number.
Data fields:
	name (String) - holds the name of the student
	studentnum (long) - holds the student number

Public functions:
	UCSDStudent		- constructor that initializes the data
				  field name and studentNum
	operator <<		- overload the << so that attributs of student can
				  be printed to the output stream.
	operator const char * 	- overload the const char * operator so that 
				  the student name can be returned.
	operator ==		- overload the == operator and return if the Student
				  names are the same or not.
	operator <		- overload the < operator and return if the base's
				  name is greater than the name of the calling 
				  object name.
****************************************************************************/
class UCSDStudent {
        friend ostream & operator << (ostream &, const UCSDStudent &);
        char name[16];		//Name of student
        long studentnum;	//number for student

public:
	/*----------------------------------------------------------------------
	Function Name:		UCSDStudent
	Purpose:			Initialize the data fields.
	Description:		This function exists to initialize the name of
						the student and number.
	Input:				nm: Expected to be the student name.
						val: Expected to be the student number.
	Result:				No return studentnum.
	----------------------------------------------------------------------*/
	UCSDStudent (char * nm, long val = 0) : studentnum (val) {
		memset(name, '\0', sizeof(name));
		strcpy (name, nm);
	}

	/*----------------------------------------------------------------------
	Function Name:		UCSDStudent
	Purpose:			Initialize the data fields.
	Description:		This function exists to initialize the name of
						the student and number.
	Input:				nm: Expected to be the student name.
						val: Expected to be the student number.
	Result:				No return studentnum.
	----------------------------------------------------------------------*/
	UCSDStudent (const UCSDStudent & student) {
		memset (name, '\0', sizeof (name));
		strcpy (name, student.name);
		value = student.value;
	}

	
	/*----------------------------------------------------------------------
	Function Name:		(overload) const char *
	Purpose:            Overload the const char * operator.
	Description:        This function exists to overload the const char *
						operator so that the name can be returned.
	Input:				No input values
	Result:             Returns the name of the student.
	----------------------------------------------------------------------*/
	operator const char * (void) const {
			return name;
	}

	/*----------------------------------------------------------------------
	Function Name:      (overload) ==
	Purpose:            Overload the == operator.
	Description:        This function exists to overload the == operator
						and return if the Student names are the same.
	Input:				base: Expected to be a type Base to compare the 
						to student names.
	Result:             Returns true if the name are equal and false 
						otherwise.
	----------------------------------------------------------------------*/
	long operator == (const UCSDStudent & student) const {
			return ! strcmp (name, student.name);
	}

	/*----------------------------------------------------------------------
	Function Name:      (overload) <
	Purpose:            Overload the < operator.
	Description:        This function exists to overload the < operator
						and return if the base's name is greater than the
						name of the calling object name.
	Input:				base: Expected to be a type Base to compare the 
						to student names.
	Result:             Returns true if the calling object's name is less
						than the the base name.
	----------------------------------------------------------------------*/
	long operator < (const UCSDStudent & student) const {
			return (strcmp (name, student.name) < 0) ? 1 : 0;
	}
};

#endif
